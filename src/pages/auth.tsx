
import { ReactElement, useEffect, useState } from 'react'
import StyledFirebaseAuth from 'react-firebaseui/StyledFirebaseAuth'
import { AuthAction, withAuthUser } from 'next-firebase-auth'
import { GithubAuthProvider, GoogleAuthProvider } from 'firebase/auth'
import { authForFirebaseUI } from '@/lib/firebase/client'
import Logo from '@/components/Logo'
import Head from 'next/head'

const firebaseAuthConfig = {
  signInFlow: 'popup',
  // Auth providers
  // https://github.com/firebase/firebaseui-web#configure-oauth-providers
  signInOptions: [
    {
      provider: GoogleAuthProvider.PROVIDER_ID
    },
    {
      provider: GithubAuthProvider.PROVIDER_ID
    }
  ],
  signInSuccessUrl: '/app',
  credentialHelper: 'none',
  callbacks: {
    // https://github.com/firebase/firebaseui-web#signinsuccesswithauthresultauthresult-redirecturl
    signInSuccessWithAuthResult: () =>
      // Don't automatically redirect. We handle redirecting based on
      // auth state in withAuthComponent.js.
      false
  }
}

function Auth (): ReactElement {
  const [renderAuth, setRenderAuth] = useState(false)
  useEffect(() => {
    setRenderAuth(true)
  }, [])

  return (
    <>
      <Head>
        <title>Start Creating | MDocs</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <div>
        <div className='mt-20 w-full max-w-3xl mx-auto text-center'>
          <Logo width='120' className='mx-auto w-max' />
          <h1 className='font-bold text-4xl my-10'>Start managing <br /> Markdown now!</h1>
          {renderAuth
            ? (
              <StyledFirebaseAuth
                className='flex'
                uiConfig={firebaseAuthConfig}
                firebaseAuth={authForFirebaseUI}
              />
              )
            : null}
        </div>
      </div>
    </>
  )
}

export default withAuthUser({
  whenAuthed: AuthAction.REDIRECT_TO_APP
})(Auth)
