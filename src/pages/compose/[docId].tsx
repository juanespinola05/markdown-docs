import { validateToken } from '@/lib/firebase/actions/authAdmin'
import Head from 'next/head'
import { GetServerSideProps, NextPage } from 'next'
import { getMarkdownDocByIdAndUser } from '@/lib/firebase/actions/documents'
import { MarkdownDocFromCollection } from '@/types'
import EditorSection from '@/sections/EditorSection'

export const getServerSideProps: GetServerSideProps = async (context) => {
  const { docId } = context.query
  // @ts-expect-error
  console.log(context.req.locals)
  try {
    const { email } = await validateToken(context)
    const documentData = await getMarkdownDocByIdAndUser(email as string, docId as string)
    return {
      props: {
        data: { ...documentData, docId }
      }
    }
  } catch (error) {
    console.log('ðŸš€ ~ file: [docId].tsx:22 ~ constgetServerSideProps:GetServerSideProps= ~ error:', error)
    return {
      redirect: {
        permanent: false,
        destination: '/'
      },
      props: {}
    }
  }
}

interface IProps {
  data: MarkdownDocFromCollection
}

const DocumentCompose: NextPage<IProps> = ({ data }) => {
  return (
    <>
      <Head>
        <title>{data.title}</title>
        <meta name='description' content='Generated by create next app' />
        <meta name='viewport' content='width=device-width, initial-scale=1' />
        <link rel='icon' href='/favicon.ico' />
      </Head>
      <EditorSection {...data} />
    </>
  )
}

export default DocumentCompose
